{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","jaJP","context","React","createContext","Header","Box","className","fontSize","Navigation","useContext","Container","ButtonGroup","size","variant","color","aria-label","Button","Body","maxWidth","src","arrowLeft","ArrowLeft","arrowRight","ArrowRight","addArrowClickHandler","width","height","title","frameborder","allow","allowfullscreen","App","useState","searchTerm","state","setState","Provider","value","set","v","current","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e110f306.chunk.js","sourcesContent":["import React, {useContext, useState} from 'react';\nimport './App.css';\nimport { Box, Button, ButtonGroup, Container } from '@material-ui/core';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { jaJP } from '@material-ui/core/locale';\nimport Image from 'material-ui-image';\nimport Carousel from '@brainhubeu/react-carousel';\nimport '@brainhubeu/react-carousel/lib/style.css';\nimport { ArrowLeft, ArrowRight } from '@material-ui/icons';\n\nconst theme = createMuiTheme({}, jaJP);\n\nconst context = React.createContext()\n\nfunction App() {\n  const [state, setState] = useState({\n    searchTerm:''\n  })\n  return <context.Provider value={{\n    ...state, \n    set: v=> setState(current=> {\n      return{...current, ...v}})\n  }}>\n    <ThemeProvider theme={theme}>\n      <Header />\n      <Navigation />\n      <Body />\n    </ThemeProvider>\n  </context.Provider>\n}\n\nfunction Header(){\n  return (\n  <Box className=\"header\" >\n    <Box className=\"title-back\" fontSize=\"4rem\">\n      タンポポとラーメン\n    </Box>\n    <Box className=\"image-1\"/>\n  </Box>\n  )\n}\n\nfunction Navigation(){\n  const ctx = useContext(context)\n  return(\n    <Container className=\"nav-wrap\" >\n      <ButtonGroup className=\"navigation\" size=\"large\" variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\n        <Button>タンポポの映画</Button>\n        <Button>ラーメンの食べ方</Button>\n        <Button>ラーメンのオノマトペ</Button>\n      </ButtonGroup>\n    </Container>\n  )\n}\n\nfunction Body(){\n  return(\n  <Container className=\"body\" maxWidth=\"md\">\n    <Box className=\"section\">\n      <Box className=\"title\" >\n        タンポポの映画\n      </Box>\n      <Box className=\"twocol\">\n        <Box className=\"paraone\" fontSize=\"24px\">\n          タンポポは１９８５年のコメディ映画です。二人のトラック運転手がタンポポという女性の詰まらなくて売れないラーメン家を立て直して助ける物語です。トラック運転手ゴローは先生になって、厳しい修業が始まります。一番美味しいレシピを探すためにタンポポは色々なラーメン屋に行ってラーメンの秘密を得てみます。もっと面白い登場人物が出て、一緒にタンポポラーメンを開きます。\n        </Box>\n        <Box className=\"poster\">\n          <Image className=\"img\" src=\"https://e.snmc.io/i/300/w/b953e4b5e548e41d86b803d9bac31bdd/7837640\" />\n        </Box>\n      </Box>\n      <Box　className=\"subtitle\" >\n        登場人物\n      </Box>\n      \n      <Box>\n        <Carousel\n          arrowLeft={<ArrowLeft fontSize=\"large\"/>}\n          arrowRight={<ArrowRight fontSize=\"large\"/>}\n          addArrowClickHandler\n        >\n          <Box className=\"slide\" >\n            <Box className=\"tanpopo\">\n\n            </Box>\n            <Box className=\"slide-cont\">\n              <Box　className=\"subtitle\" >\n                タンポポ\n              </Box>\n              <Box className=\"char\">\n                演: 宮本信子\n              </Box>\n              <Box className=\"para\">\n                売れないラーメン屋の店主。夫が亡くなった時、彼のラーメン屋を一所懸命営んだけど、ラーメンの作り方があまり分かりません。でも、ゴローとガンが助けてラーメンについて学ぶことができます。\n              </Box>\n            </Box>\n          </Box>\n          <Box className=\"slide\" >\n            <Box className=\"goro\">\n\n            </Box>\n            <Box className=\"slide-cont\">\n              <Box　className=\"subtitle\" >\n                ゴロー\n              </Box>\n              <Box className=\"char\">\n                演: 山崎努\n              </Box>\n              <Box className=\"para\">\n                トラック運転手です。偶然にタンポポのラーメン屋に行きました。よく戦いに入って、前はボクサーでした。ラーメンについてたくさんしています。\n              </Box>\n            </Box>\n          </Box>        \n          <Box className=\"slide\" >\n            <Box className=\"gun\">\n\n            </Box>\n            <Box className=\"slide-cont\">\n              <Box　className=\"subtitle\" >\n                ガン\n              </Box>\n              <Box className=\"char\">\n                演: 渡辺謙\n              </Box>\n              <Box className=\"para\">\n              ゴローとトラックを運転します。映画の冒頭でラーメンの食べ方について本を読んでいました。ガンもタンポポのラーメン屋を立て直して助けます。\n\n              </Box>\n            </Box>\n          </Box>        \n        </Carousel>\n      </Box>\n    </Box>\n\n    <Box className=\"section\">\n      <Box className=\"title\" >\n        ラーメンの食べ方\n      </Box>\n      <Box className=\"para\">\n        タンポポでラーメンの食べ方について面白い場面があります。ラーメンは厳しい食べ方を守りたい人がいますが、この場面がその人をからかっています。場面を見ましょう！\n      </Box>\n      \n      <Box className=\"embed\">\n        <iframe width=\"80%\" height=\"400px\" title=\"ramen-master\"\n          src=\"https://www.youtube.com/embed/6WrkdTrrwew?start=19\" \n          frameborder=\"0\" allow=\"accelerometer; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\n        </iframe>\n      </Box>\n      <Box className=\"para\">\n        最初の老人の厳しい食べる方じゃなくて、自由に食べるほうがいいです。あとはスパゲティーのシーンから先生が音無で食べなくてはいけないと言いますが、彼女たちはそうしないで食べます。らめんはカシュアルな食べ物だから、カシュアルで食べる方がいいです。\n      </Box>\n    </Box>\n  </Container>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}